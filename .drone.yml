pipeline:
  restore_cache:
    image: plugins/s3-cache
    pull: true
    endpoint: https://s3.amazonaws.com
    accelerated_endpoint: s3-accelerate.amazonaws.com
    root: /drone-cache-fusionapp
    restore: true
    mount:
      - /drone/pip-cache
      - /drone/pex-cache
    secrets:
      - aws_access_key_id
      - aws_secret_access_key
    when:
      event:
        - push
        - pull_request
        - tag
  build:
    image: fusionapp/base
    pull: true
    environment:
      - PIP_CACHE_DIR=/drone/pip-cache
    commands:
      # Take this out once pex is in the base image
      - /appenv/bin/pip install pex==1.4.1 requests==2.18.4
      - >
        /appenv/bin/pex
        --python /appenv/bin/python
        --no-pypi
        --index https://pypi.org/simple/
        --cache-dir /drone/pex-cache
        --script twistd
        --output-file fusion-index.pex
        --always-write-cache
        --requirement requirements.txt
        .
      - env PEX_MODULE=twisted.trial ./fusion-index.pex fusion_index
    when:
      event:
        - push
        - pull_request
        - tag
  rebuild_cache:
    image: plugins/s3-cache
    pull: true
    endpoint: https://s3.amazonaws.com
    accelerated_endpoint: s3-accelerate.amazonaws.com
    root: /drone-cache-fusionapp
    rebuild: true
    mount:
      - /drone/pip-cache
      - /drone/pex-cache
    secrets:
      - aws_access_key_id
      - aws_secret_access_key
    when:
      event: push
      branch:
        - master
  flush_cache:
    image: plugins/s3-cache
    pull: true
    endpoint: https://s3.amazonaws.com
    accelerated_endpoint: s3-accelerate.amazonaws.com
    root: /drone-cache-fusionapp
    flush: true
    secrets:
      - aws_access_key_id
      - aws_secret_access_key
    when:
      event: push
      branch:
        - master
  publish:
    image: plugins/ecr
    region: eu-west-1
    registry: 801493518741.dkr.ecr.eu-west-1.amazonaws.com
    repo: 801493518741.dkr.ecr.eu-west-1.amazonaws.com/fusion-index
    tags:
      - ${DRONE_BRANCH}
      - git-${DRONE_COMMIT_SHA}
    when:
      event: push
      branch: master
    secrets:
      - ecr_access_key
      - ecr_secret_key
  deploy:
    image: peloton/drone-rancher
    url: https://rancher.fusionapp.com
    service: Fusion/fusion-index
    docker_image: 801493518741.dkr.ecr.eu-west-1.amazonaws.com/fusion-index:git-${DRONE_COMMIT_SHA}
    start_first: false
    confirm: true
    timeout: 240
    when:
      event: push
      branch: master
    secrets:
      - source: rancher_nonprod_access_key
        target: rancher_access_key
      - source: rancher_nonprod_secret_key
        target: rancher_secret_key
  deploy-production:
    image: peloton/drone-rancher
    url: https://rancher.fusionapp.com
    service: fusion/fusion-index
    docker_image: 801493518741.dkr.ecr.eu-west-1.amazonaws.com/fusion-index:git-${DRONE_COMMIT_SHA}
    start_first: false
    confirm: true
    timeout: 240
    when:
      event: deployment
      environment: production
    secrets:
      - source: rancher_prod_access_key
        target: rancher_access_key
      - source: rancher_prod_secret_key
        target: rancher_secret_key
  slack:
    image: plugins/slack
    secrets:
      - slack_webhook
    when:
      status:
        - success
        - failure
  slack_production:
    image: plugins/slack
    secrets:
      - slack_webhook
    channel: production
    when:
      event: deployment
      environment: production
      status:
        - success
        - failure
branches:
  - master
  - staging
  - trying
